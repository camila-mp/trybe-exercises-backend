use("class")
db.movies.find().pretty()

// Exercício 1: Adicione a categoria "superhero" ao filme Batman.

use("class")
db.movies.update({ title:"Batman" }, { $push: { category: "superhero" } })

// Exercício 2: Utilizando o modificador $each , adicione as categorias "villain" e "comic-based" ao filme Batman.

use("class")
db.movies.update(
  { title: "Batman" },
  { $push: { 
    category: { 
      $each: ["villain", "comic-based"] 
      }
    }
  }
)

// Exercício 3: Remova a categoria "action" do filme Batman.

use("class")
db.movies.updateMany(
  { title: "Batman" },
  { $pop: { category: -1 } }
)

// Exercício 4: Remova o primeiro elemento do array category do filme Batman.

use("class")
db.movies.updateMany(
  { title: "Batman" },
  { $pop: { category: -1 } }
)

// Exercício 5: Remova o último elemento do array category do filme Batman.

use("class")
db.movies.updateMany(
  { title: "Batman" },
  { $pop: { category: 1 } }
)

// Exercício 6: Adicione o elemento "action" ao array category do filme Batman , garantindo que esse valor não se duplique.

use("class")
db.movies.updateMany(
  { title: "Batman" },
  { $addToSet: { category: "action" } }
)


// Exercício 7: Adicione a categoria "90's" aos filmes Batman e Home Alone.

use("class")
db.movies.updateMany(
  { $or: [{ title: "Batman" }, { title: "Home Alone" }] },
  { $push: { category: "90's" } }
)

// Exercício 8: Crie um array de documentos chamado cast para o filme Home Alone com os seguintes dados:

use("class")
db.movies.updateMany(
  { title: "Home Alone" },
  { $set: 
    { cast: [
      {
        "actor": "Macaulay Culkin",
        "character": "Kevin"
      },
      {
        "actor": "Joe Pesci",
        "character": "Harry"
      },
      {
        "actor": "Daniel Stern"
      }
      ]
    }
  }
)

//Exercício 9: Adicione o campo character com o valor Marv ao array de cast em que o campo actor seja igual a Daniel Stern no filme Home Alone.
// Dica : Para isso, leia aqui sobre o operador $.

use("class")
db.movies.updateMany(
  { title: "Home Alone", "cast.actor": "Daniel Stern" },
  { $set: 
    { "cast.$.character": "Marv" }
  }
)

// Exercício 10: Crie um array de documentos chamado cast para o filme Batman com os seguintes dados:
// ----Isso pode ser feito de forma mais simples usando o set, igual eu fiz no exercicio 8, porem resolvi deixar registrado como fazer com 'push'----

use("class")
db.movies.updateMany(
  { title: "Batman" },
  { $push: 
    { cast: { $each: [
        { "character": "Batman" },
        { "character": "Alfred" },
        { "character": "Coringa" }
      ]} 
    }
  }
)

// Exercício 11: Produza três querys para o filme Batman:
// 1 - Adicione o campo actor , que deve ser um array com o valor Christian Bale , ao array de cast em que o campo character seja igual a Batman ;
// 2 - Adicione o campo actor , que deve ser um array com o valor Michael Caine , ao array de cast em que o campo character seja igual a Alfred ;
// 3 - Adicione o campo actor , que deve ser um array com o valor Heath Ledger , ao array de cast em que o campo character seja igual a Coringa.

// [1] Existem duas opçoes que produzem o mesmo resultado!
// Tem alguma situaçao mais adequada para cada opçao?
// Opção A (mais simples, e foi a primeira que eu escolhi)

use("class")
db.movies.updateMany(
  { "cast.character": "Batman" },
  { $push: 
    { "cast.$.actor": "Christian Bale" } 
  }
)

// Opção B
use("class")
db.movies.updateMany(
  { title: "Batman" },
  { $set: 
    { "cast.$[elemento].actor": ["Christian Bale"] } 
  },
  { arrayFilters: [ { "elemento.character": "Batman" } ] }
)

// --------------------------------------
// [2]
use("class")
db.movies.updateMany(
  { "cast.character": "Alfred" },
  { $push: 
    { "cast.$.actor": "Michael Caine" } 
  }
)

// --------------------------------------
// [3]
use("class")
db.movies.updateMany(
  { "cast.character": "Coringa" },
  { $push: 
    { "cast.$.actor": "Heath Ledger" } 
  }
)
